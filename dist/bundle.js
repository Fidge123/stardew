!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);class r{constructor(e){this.file="",this.output="",this.reader=new FileReader,this.reader.readAsText(e),this.reader.onloadend=(e=>{this.onloadend(e)})}transform(e){this.output=this.file.replace(new RegExp(`<farmhand>.*<name>${e}</name>.*</farmhand>`,"g"),"")}download(){return new Blob([this.output],{type:"application/octet-binary"})}onloadend(e){const t=e.target;t&&(this.file=t.result)}}let o,i;n.d(t,"read",function(){return c}),n.d(t,"apply",function(){return l}),n.d(t,"download",function(){return f});const u=document.getElementById("file");u&&u.addEventListener("change",c);const a=document.getElementById("apply");a&&a.addEventListener("click",l);const d=document.getElementById("download");function c(e){const t=e.target;if(t){const e=t.files;e&&e.length&&(o=new r(e[0]),i=e[0].name)}}function l(){const e=document.getElementById("remove"),t=e?e.value:"";o.transform(t)}function f(){const e=document.createElement("a");e.href=window.URL.createObjectURL(o.download()),e.download=i,e.click()}d&&d.addEventListener("click",f)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,